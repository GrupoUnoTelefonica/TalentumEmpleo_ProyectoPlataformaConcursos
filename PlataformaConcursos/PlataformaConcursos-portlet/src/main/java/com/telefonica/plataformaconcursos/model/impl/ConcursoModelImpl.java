package com.telefonica.plataformaconcursos.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.telefonica.plataformaconcursos.model.Concurso;
import com.telefonica.plataformaconcursos.model.ConcursoModel;
import com.telefonica.plataformaconcursos.model.ConcursoSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Concurso service. Represents a row in the &quot;concurso&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.telefonica.plataformaconcursos.model.ConcursoModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ConcursoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ConcursoImpl
 * @see com.telefonica.plataformaconcursos.model.Concurso
 * @see com.telefonica.plataformaconcursos.model.ConcursoModel
 * @generated
 */
@JSON(strict = true)
public class ConcursoModelImpl extends BaseModelImpl<Concurso>
    implements ConcursoModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a concurso model instance should use the {@link com.telefonica.plataformaconcursos.model.Concurso} interface instead.
     */
    public static final String TABLE_NAME = "concurso";
    public static final Object[][] TABLE_COLUMNS = {
            { "concursoId", Types.BIGINT },
            { "groupId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "nombre", Types.VARCHAR },
            { "fechaInicioInscripcion", Types.TIMESTAMP },
            { "modifiedDate", Types.TIMESTAMP },
            { "descripcion", Types.VARCHAR },
            { "premio", Types.VARCHAR },
            { "fechaFinInscripcion", Types.TIMESTAMP },
            { "fechaPublicacionConcurso", Types.TIMESTAMP },
            { "fechaPublicacionGanador", Types.TIMESTAMP },
            { "fechaInicioEntrega", Types.TIMESTAMP },
            { "fechaFinEntrega", Types.TIMESTAMP },
            { "empresaId", Types.BIGINT },
            { "documento", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table concurso (concursoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,nombre VARCHAR(75) null,fechaInicioInscripcion DATE null,modifiedDate DATE null,descripcion VARCHAR(75) null,premio VARCHAR(75) null,fechaFinInscripcion DATE null,fechaPublicacionConcurso DATE null,fechaPublicacionGanador DATE null,fechaInicioEntrega DATE null,fechaFinEntrega DATE null,empresaId LONG,documento VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table concurso";
    public static final String ORDER_BY_JPQL = " ORDER BY concurso.concursoId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY concurso.concursoId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.telefonica.plataformaconcursos.model.Concurso"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.telefonica.plataformaconcursos.model.Concurso"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.telefonica.plataformaconcursos.model.Concurso"),
            true);
    public static long EMPRESAID_COLUMN_BITMASK = 1L;
    public static long CONCURSOID_COLUMN_BITMASK = 2L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.telefonica.plataformaconcursos.model.Concurso"));
    private static ClassLoader _classLoader = Concurso.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Concurso.class
        };
    private long _concursoId;
    private long _groupId;
    private long _companyId;
    private long _userId;
    private String _userUuid;
    private String _nombre;
    private Date _fechaInicioInscripcion;
    private Date _modifiedDate;
    private String _descripcion;
    private String _premio;
    private Date _fechaFinInscripcion;
    private Date _fechaPublicacionConcurso;
    private Date _fechaPublicacionGanador;
    private Date _fechaInicioEntrega;
    private Date _fechaFinEntrega;
    private long _empresaId;
    private long _originalEmpresaId;
    private boolean _setOriginalEmpresaId;
    private String _documento;
    private long _columnBitmask;
    private Concurso _escapedModel;

    public ConcursoModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Concurso toModel(ConcursoSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Concurso model = new ConcursoImpl();

        model.setConcursoId(soapModel.getConcursoId());
        model.setGroupId(soapModel.getGroupId());
        model.setCompanyId(soapModel.getCompanyId());
        model.setUserId(soapModel.getUserId());
        model.setNombre(soapModel.getNombre());
        model.setFechaInicioInscripcion(soapModel.getFechaInicioInscripcion());
        model.setModifiedDate(soapModel.getModifiedDate());
        model.setDescripcion(soapModel.getDescripcion());
        model.setPremio(soapModel.getPremio());
        model.setFechaFinInscripcion(soapModel.getFechaFinInscripcion());
        model.setFechaPublicacionConcurso(soapModel.getFechaPublicacionConcurso());
        model.setFechaPublicacionGanador(soapModel.getFechaPublicacionGanador());
        model.setFechaInicioEntrega(soapModel.getFechaInicioEntrega());
        model.setFechaFinEntrega(soapModel.getFechaFinEntrega());
        model.setEmpresaId(soapModel.getEmpresaId());
        model.setDocumento(soapModel.getDocumento());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Concurso> toModels(ConcursoSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Concurso> models = new ArrayList<Concurso>(soapModels.length);

        for (ConcursoSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public long getPrimaryKey() {
        return _concursoId;
    }

    @Override
    public void setPrimaryKey(long primaryKey) {
        setConcursoId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _concursoId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Long) primaryKeyObj).longValue());
    }

    @Override
    public Class<?> getModelClass() {
        return Concurso.class;
    }

    @Override
    public String getModelClassName() {
        return Concurso.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("concursoId", getConcursoId());
        attributes.put("groupId", getGroupId());
        attributes.put("companyId", getCompanyId());
        attributes.put("userId", getUserId());
        attributes.put("nombre", getNombre());
        attributes.put("fechaInicioInscripcion", getFechaInicioInscripcion());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("descripcion", getDescripcion());
        attributes.put("premio", getPremio());
        attributes.put("fechaFinInscripcion", getFechaFinInscripcion());
        attributes.put("fechaPublicacionConcurso", getFechaPublicacionConcurso());
        attributes.put("fechaPublicacionGanador", getFechaPublicacionGanador());
        attributes.put("fechaInicioEntrega", getFechaInicioEntrega());
        attributes.put("fechaFinEntrega", getFechaFinEntrega());
        attributes.put("empresaId", getEmpresaId());
        attributes.put("documento", getDocumento());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Long concursoId = (Long) attributes.get("concursoId");

        if (concursoId != null) {
            setConcursoId(concursoId);
        }

        Long groupId = (Long) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        String nombre = (String) attributes.get("nombre");

        if (nombre != null) {
            setNombre(nombre);
        }

        Date fechaInicioInscripcion = (Date) attributes.get(
                "fechaInicioInscripcion");

        if (fechaInicioInscripcion != null) {
            setFechaInicioInscripcion(fechaInicioInscripcion);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String descripcion = (String) attributes.get("descripcion");

        if (descripcion != null) {
            setDescripcion(descripcion);
        }

        String premio = (String) attributes.get("premio");

        if (premio != null) {
            setPremio(premio);
        }

        Date fechaFinInscripcion = (Date) attributes.get("fechaFinInscripcion");

        if (fechaFinInscripcion != null) {
            setFechaFinInscripcion(fechaFinInscripcion);
        }

        Date fechaPublicacionConcurso = (Date) attributes.get(
                "fechaPublicacionConcurso");

        if (fechaPublicacionConcurso != null) {
            setFechaPublicacionConcurso(fechaPublicacionConcurso);
        }

        Date fechaPublicacionGanador = (Date) attributes.get(
                "fechaPublicacionGanador");

        if (fechaPublicacionGanador != null) {
            setFechaPublicacionGanador(fechaPublicacionGanador);
        }

        Date fechaInicioEntrega = (Date) attributes.get("fechaInicioEntrega");

        if (fechaInicioEntrega != null) {
            setFechaInicioEntrega(fechaInicioEntrega);
        }

        Date fechaFinEntrega = (Date) attributes.get("fechaFinEntrega");

        if (fechaFinEntrega != null) {
            setFechaFinEntrega(fechaFinEntrega);
        }

        Long empresaId = (Long) attributes.get("empresaId");

        if (empresaId != null) {
            setEmpresaId(empresaId);
        }

        String documento = (String) attributes.get("documento");

        if (documento != null) {
            setDocumento(documento);
        }
    }

    @JSON
    @Override
    public long getConcursoId() {
        return _concursoId;
    }

    @Override
    public void setConcursoId(long concursoId) {
        _concursoId = concursoId;
    }

    @JSON
    @Override
    public long getGroupId() {
        return _groupId;
    }

    @Override
    public void setGroupId(long groupId) {
        _groupId = groupId;
    }

    @JSON
    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _companyId = companyId;
    }

    @JSON
    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    @JSON
    @Override
    public String getNombre() {
        if (_nombre == null) {
            return StringPool.BLANK;
        } else {
            return _nombre;
        }
    }

    @Override
    public void setNombre(String nombre) {
        _nombre = nombre;
    }

    @JSON
    @Override
    public Date getFechaInicioInscripcion() {
        return _fechaInicioInscripcion;
    }

    @Override
    public void setFechaInicioInscripcion(Date fechaInicioInscripcion) {
        _fechaInicioInscripcion = fechaInicioInscripcion;
    }

    @JSON
    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @JSON
    @Override
    public String getDescripcion() {
        if (_descripcion == null) {
            return StringPool.BLANK;
        } else {
            return _descripcion;
        }
    }

    @Override
    public void setDescripcion(String descripcion) {
        _descripcion = descripcion;
    }

    @JSON
    @Override
    public String getPremio() {
        if (_premio == null) {
            return StringPool.BLANK;
        } else {
            return _premio;
        }
    }

    @Override
    public void setPremio(String premio) {
        _premio = premio;
    }

    @JSON
    @Override
    public Date getFechaFinInscripcion() {
        return _fechaFinInscripcion;
    }

    @Override
    public void setFechaFinInscripcion(Date fechaFinInscripcion) {
        _fechaFinInscripcion = fechaFinInscripcion;
    }

    @JSON
    @Override
    public Date getFechaPublicacionConcurso() {
        return _fechaPublicacionConcurso;
    }

    @Override
    public void setFechaPublicacionConcurso(Date fechaPublicacionConcurso) {
        _fechaPublicacionConcurso = fechaPublicacionConcurso;
    }

    @JSON
    @Override
    public Date getFechaPublicacionGanador() {
        return _fechaPublicacionGanador;
    }

    @Override
    public void setFechaPublicacionGanador(Date fechaPublicacionGanador) {
        _fechaPublicacionGanador = fechaPublicacionGanador;
    }

    @JSON
    @Override
    public Date getFechaInicioEntrega() {
        return _fechaInicioEntrega;
    }

    @Override
    public void setFechaInicioEntrega(Date fechaInicioEntrega) {
        _fechaInicioEntrega = fechaInicioEntrega;
    }

    @JSON
    @Override
    public Date getFechaFinEntrega() {
        return _fechaFinEntrega;
    }

    @Override
    public void setFechaFinEntrega(Date fechaFinEntrega) {
        _fechaFinEntrega = fechaFinEntrega;
    }

    @JSON
    @Override
    public long getEmpresaId() {
        return _empresaId;
    }

    @Override
    public void setEmpresaId(long empresaId) {
        _columnBitmask |= EMPRESAID_COLUMN_BITMASK;

        if (!_setOriginalEmpresaId) {
            _setOriginalEmpresaId = true;

            _originalEmpresaId = _empresaId;
        }

        _empresaId = empresaId;
    }

    public long getOriginalEmpresaId() {
        return _originalEmpresaId;
    }

    @JSON
    @Override
    public String getDocumento() {
        if (_documento == null) {
            return StringPool.BLANK;
        } else {
            return _documento;
        }
    }

    @Override
    public void setDocumento(String documento) {
        _documento = documento;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ExpandoBridge getExpandoBridge() {
        return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
            Concurso.class.getName(), getPrimaryKey());
    }

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
        ExpandoBridge expandoBridge = getExpandoBridge();

        expandoBridge.setAttributes(serviceContext);
    }

    @Override
    public Concurso toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Concurso) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        ConcursoImpl concursoImpl = new ConcursoImpl();

        concursoImpl.setConcursoId(getConcursoId());
        concursoImpl.setGroupId(getGroupId());
        concursoImpl.setCompanyId(getCompanyId());
        concursoImpl.setUserId(getUserId());
        concursoImpl.setNombre(getNombre());
        concursoImpl.setFechaInicioInscripcion(getFechaInicioInscripcion());
        concursoImpl.setModifiedDate(getModifiedDate());
        concursoImpl.setDescripcion(getDescripcion());
        concursoImpl.setPremio(getPremio());
        concursoImpl.setFechaFinInscripcion(getFechaFinInscripcion());
        concursoImpl.setFechaPublicacionConcurso(getFechaPublicacionConcurso());
        concursoImpl.setFechaPublicacionGanador(getFechaPublicacionGanador());
        concursoImpl.setFechaInicioEntrega(getFechaInicioEntrega());
        concursoImpl.setFechaFinEntrega(getFechaFinEntrega());
        concursoImpl.setEmpresaId(getEmpresaId());
        concursoImpl.setDocumento(getDocumento());

        concursoImpl.resetOriginalValues();

        return concursoImpl;
    }

    @Override
    public int compareTo(Concurso concurso) {
        long primaryKey = concurso.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Concurso)) {
            return false;
        }

        Concurso concurso = (Concurso) obj;

        long primaryKey = concurso.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return (int) getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        ConcursoModelImpl concursoModelImpl = this;

        concursoModelImpl._originalEmpresaId = concursoModelImpl._empresaId;

        concursoModelImpl._setOriginalEmpresaId = false;

        concursoModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Concurso> toCacheModel() {
        ConcursoCacheModel concursoCacheModel = new ConcursoCacheModel();

        concursoCacheModel.concursoId = getConcursoId();

        concursoCacheModel.groupId = getGroupId();

        concursoCacheModel.companyId = getCompanyId();

        concursoCacheModel.userId = getUserId();

        concursoCacheModel.nombre = getNombre();

        String nombre = concursoCacheModel.nombre;

        if ((nombre != null) && (nombre.length() == 0)) {
            concursoCacheModel.nombre = null;
        }

        Date fechaInicioInscripcion = getFechaInicioInscripcion();

        if (fechaInicioInscripcion != null) {
            concursoCacheModel.fechaInicioInscripcion = fechaInicioInscripcion.getTime();
        } else {
            concursoCacheModel.fechaInicioInscripcion = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            concursoCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            concursoCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        concursoCacheModel.descripcion = getDescripcion();

        String descripcion = concursoCacheModel.descripcion;

        if ((descripcion != null) && (descripcion.length() == 0)) {
            concursoCacheModel.descripcion = null;
        }

        concursoCacheModel.premio = getPremio();

        String premio = concursoCacheModel.premio;

        if ((premio != null) && (premio.length() == 0)) {
            concursoCacheModel.premio = null;
        }

        Date fechaFinInscripcion = getFechaFinInscripcion();

        if (fechaFinInscripcion != null) {
            concursoCacheModel.fechaFinInscripcion = fechaFinInscripcion.getTime();
        } else {
            concursoCacheModel.fechaFinInscripcion = Long.MIN_VALUE;
        }

        Date fechaPublicacionConcurso = getFechaPublicacionConcurso();

        if (fechaPublicacionConcurso != null) {
            concursoCacheModel.fechaPublicacionConcurso = fechaPublicacionConcurso.getTime();
        } else {
            concursoCacheModel.fechaPublicacionConcurso = Long.MIN_VALUE;
        }

        Date fechaPublicacionGanador = getFechaPublicacionGanador();

        if (fechaPublicacionGanador != null) {
            concursoCacheModel.fechaPublicacionGanador = fechaPublicacionGanador.getTime();
        } else {
            concursoCacheModel.fechaPublicacionGanador = Long.MIN_VALUE;
        }

        Date fechaInicioEntrega = getFechaInicioEntrega();

        if (fechaInicioEntrega != null) {
            concursoCacheModel.fechaInicioEntrega = fechaInicioEntrega.getTime();
        } else {
            concursoCacheModel.fechaInicioEntrega = Long.MIN_VALUE;
        }

        Date fechaFinEntrega = getFechaFinEntrega();

        if (fechaFinEntrega != null) {
            concursoCacheModel.fechaFinEntrega = fechaFinEntrega.getTime();
        } else {
            concursoCacheModel.fechaFinEntrega = Long.MIN_VALUE;
        }

        concursoCacheModel.empresaId = getEmpresaId();

        concursoCacheModel.documento = getDocumento();

        String documento = concursoCacheModel.documento;

        if ((documento != null) && (documento.length() == 0)) {
            concursoCacheModel.documento = null;
        }

        return concursoCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(33);

        sb.append("{concursoId=");
        sb.append(getConcursoId());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", nombre=");
        sb.append(getNombre());
        sb.append(", fechaInicioInscripcion=");
        sb.append(getFechaInicioInscripcion());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", descripcion=");
        sb.append(getDescripcion());
        sb.append(", premio=");
        sb.append(getPremio());
        sb.append(", fechaFinInscripcion=");
        sb.append(getFechaFinInscripcion());
        sb.append(", fechaPublicacionConcurso=");
        sb.append(getFechaPublicacionConcurso());
        sb.append(", fechaPublicacionGanador=");
        sb.append(getFechaPublicacionGanador());
        sb.append(", fechaInicioEntrega=");
        sb.append(getFechaInicioEntrega());
        sb.append(", fechaFinEntrega=");
        sb.append(getFechaFinEntrega());
        sb.append(", empresaId=");
        sb.append(getEmpresaId());
        sb.append(", documento=");
        sb.append(getDocumento());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(52);

        sb.append("<model><model-name>");
        sb.append("com.telefonica.plataformaconcursos.model.Concurso");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>concursoId</column-name><column-value><![CDATA[");
        sb.append(getConcursoId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>nombre</column-name><column-value><![CDATA[");
        sb.append(getNombre());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fechaInicioInscripcion</column-name><column-value><![CDATA[");
        sb.append(getFechaInicioInscripcion());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>descripcion</column-name><column-value><![CDATA[");
        sb.append(getDescripcion());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>premio</column-name><column-value><![CDATA[");
        sb.append(getPremio());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fechaFinInscripcion</column-name><column-value><![CDATA[");
        sb.append(getFechaFinInscripcion());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fechaPublicacionConcurso</column-name><column-value><![CDATA[");
        sb.append(getFechaPublicacionConcurso());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fechaPublicacionGanador</column-name><column-value><![CDATA[");
        sb.append(getFechaPublicacionGanador());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fechaInicioEntrega</column-name><column-value><![CDATA[");
        sb.append(getFechaInicioEntrega());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fechaFinEntrega</column-name><column-value><![CDATA[");
        sb.append(getFechaFinEntrega());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>empresaId</column-name><column-value><![CDATA[");
        sb.append(getEmpresaId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>documento</column-name><column-value><![CDATA[");
        sb.append(getDocumento());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
