package com.telefonica.plataformaconcursos.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.util.PortalUtil;

import com.telefonica.plataformaconcursos.model.Asignados;
import com.telefonica.plataformaconcursos.model.AsignadosModel;
import com.telefonica.plataformaconcursos.model.AsignadosSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Asignados service. Represents a row in the &quot;asignados&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.telefonica.plataformaconcursos.model.AsignadosModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AsignadosImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AsignadosImpl
 * @see com.telefonica.plataformaconcursos.model.Asignados
 * @see com.telefonica.plataformaconcursos.model.AsignadosModel
 * @generated
 */
@JSON(strict = true)
public class AsignadosModelImpl extends BaseModelImpl<Asignados>
    implements AsignadosModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a asignados model instance should use the {@link com.telefonica.plataformaconcursos.model.Asignados} interface instead.
     */
    public static final String TABLE_NAME = "asignados";
    public static final Object[][] TABLE_COLUMNS = {
            { "asignadosId", Types.VARCHAR },
            { "groupId", Types.BIGINT },
            { "companyId", Types.BIGINT },
            { "userId", Types.BIGINT },
            { "userName", Types.VARCHAR },
            { "createDate", Types.TIMESTAMP },
            { "modifiedDate", Types.TIMESTAMP },
            { "usuarioId", Types.BIGINT },
            { "concursoId", Types.BIGINT },
            { "documento", Types.VARCHAR },
            { "puntuacionObtenida", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table asignados (asignadosId VARCHAR(75) not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,usuarioId LONG,concursoId LONG,documento VARCHAR(75) null,puntuacionObtenida VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table asignados";
    public static final String ORDER_BY_JPQL = " ORDER BY asignados.asignadosId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY asignados.asignadosId ASC";
    public static final String DATA_SOURCE = "liferayDataSource";
    public static final String SESSION_FACTORY = "liferaySessionFactory";
    public static final String TX_MANAGER = "liferayTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.telefonica.plataformaconcursos.model.Asignados"),
            true);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.telefonica.plataformaconcursos.model.Asignados"),
            true);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.telefonica.plataformaconcursos.model.Asignados"),
            true);
    public static long CONCURSOID_COLUMN_BITMASK = 1L;
    public static long USUARIOID_COLUMN_BITMASK = 2L;
    public static long ASIGNADOSID_COLUMN_BITMASK = 4L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
                "lock.expiration.time.com.telefonica.plataformaconcursos.model.Asignados"));
    private static ClassLoader _classLoader = Asignados.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            Asignados.class
        };
    private String _asignadosId;
    private long _groupId;
    private long _companyId;
    private long _userId;
    private String _userUuid;
    private String _userName;
    private Date _createDate;
    private Date _modifiedDate;
    private long _usuarioId;
    private long _originalUsuarioId;
    private boolean _setOriginalUsuarioId;
    private long _concursoId;
    private long _originalConcursoId;
    private boolean _setOriginalConcursoId;
    private String _documento;
    private String _puntuacionObtenida;
    private long _columnBitmask;
    private Asignados _escapedModel;

    public AsignadosModelImpl() {
    }

    /**
     * Converts the soap model instance into a normal model instance.
     *
     * @param soapModel the soap model instance to convert
     * @return the normal model instance
     */
    public static Asignados toModel(AsignadosSoap soapModel) {
        if (soapModel == null) {
            return null;
        }

        Asignados model = new AsignadosImpl();

        model.setAsignadosId(soapModel.getAsignadosId());
        model.setGroupId(soapModel.getGroupId());
        model.setCompanyId(soapModel.getCompanyId());
        model.setUserId(soapModel.getUserId());
        model.setUserName(soapModel.getUserName());
        model.setCreateDate(soapModel.getCreateDate());
        model.setModifiedDate(soapModel.getModifiedDate());
        model.setUsuarioId(soapModel.getUsuarioId());
        model.setConcursoId(soapModel.getConcursoId());
        model.setDocumento(soapModel.getDocumento());
        model.setPuntuacionObtenida(soapModel.getPuntuacionObtenida());

        return model;
    }

    /**
     * Converts the soap model instances into normal model instances.
     *
     * @param soapModels the soap model instances to convert
     * @return the normal model instances
     */
    public static List<Asignados> toModels(AsignadosSoap[] soapModels) {
        if (soapModels == null) {
            return null;
        }

        List<Asignados> models = new ArrayList<Asignados>(soapModels.length);

        for (AsignadosSoap soapModel : soapModels) {
            models.add(toModel(soapModel));
        }

        return models;
    }

    @Override
    public String getPrimaryKey() {
        return _asignadosId;
    }

    @Override
    public void setPrimaryKey(String primaryKey) {
        setAsignadosId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _asignadosId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((String) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return Asignados.class;
    }

    @Override
    public String getModelClassName() {
        return Asignados.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("asignadosId", getAsignadosId());
        attributes.put("groupId", getGroupId());
        attributes.put("companyId", getCompanyId());
        attributes.put("userId", getUserId());
        attributes.put("userName", getUserName());
        attributes.put("createDate", getCreateDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("usuarioId", getUsuarioId());
        attributes.put("concursoId", getConcursoId());
        attributes.put("documento", getDocumento());
        attributes.put("puntuacionObtenida", getPuntuacionObtenida());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String asignadosId = (String) attributes.get("asignadosId");

        if (asignadosId != null) {
            setAsignadosId(asignadosId);
        }

        Long groupId = (Long) attributes.get("groupId");

        if (groupId != null) {
            setGroupId(groupId);
        }

        Long companyId = (Long) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Long userId = (Long) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        String userName = (String) attributes.get("userName");

        if (userName != null) {
            setUserName(userName);
        }

        Date createDate = (Date) attributes.get("createDate");

        if (createDate != null) {
            setCreateDate(createDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Long usuarioId = (Long) attributes.get("usuarioId");

        if (usuarioId != null) {
            setUsuarioId(usuarioId);
        }

        Long concursoId = (Long) attributes.get("concursoId");

        if (concursoId != null) {
            setConcursoId(concursoId);
        }

        String documento = (String) attributes.get("documento");

        if (documento != null) {
            setDocumento(documento);
        }

        String puntuacionObtenida = (String) attributes.get(
                "puntuacionObtenida");

        if (puntuacionObtenida != null) {
            setPuntuacionObtenida(puntuacionObtenida);
        }
    }

    @JSON
    @Override
    public String getAsignadosId() {
        if (_asignadosId == null) {
            return StringPool.BLANK;
        } else {
            return _asignadosId;
        }
    }

    @Override
    public void setAsignadosId(String asignadosId) {
        _asignadosId = asignadosId;
    }

    @JSON
    @Override
    public long getGroupId() {
        return _groupId;
    }

    @Override
    public void setGroupId(long groupId) {
        _groupId = groupId;
    }

    @JSON
    @Override
    public long getCompanyId() {
        return _companyId;
    }

    @Override
    public void setCompanyId(long companyId) {
        _companyId = companyId;
    }

    @JSON
    @Override
    public long getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(long userId) {
        _userId = userId;
    }

    @Override
    public String getUserUuid() throws SystemException {
        return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
    }

    @Override
    public void setUserUuid(String userUuid) {
        _userUuid = userUuid;
    }

    @JSON
    @Override
    public String getUserName() {
        if (_userName == null) {
            return StringPool.BLANK;
        } else {
            return _userName;
        }
    }

    @Override
    public void setUserName(String userName) {
        _userName = userName;
    }

    @JSON
    @Override
    public Date getCreateDate() {
        return _createDate;
    }

    @Override
    public void setCreateDate(Date createDate) {
        _createDate = createDate;
    }

    @JSON
    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @JSON
    @Override
    public long getUsuarioId() {
        return _usuarioId;
    }

    @Override
    public void setUsuarioId(long usuarioId) {
        _columnBitmask |= USUARIOID_COLUMN_BITMASK;

        if (!_setOriginalUsuarioId) {
            _setOriginalUsuarioId = true;

            _originalUsuarioId = _usuarioId;
        }

        _usuarioId = usuarioId;
    }

    public long getOriginalUsuarioId() {
        return _originalUsuarioId;
    }

    @JSON
    @Override
    public long getConcursoId() {
        return _concursoId;
    }

    @Override
    public void setConcursoId(long concursoId) {
        _columnBitmask |= CONCURSOID_COLUMN_BITMASK;

        if (!_setOriginalConcursoId) {
            _setOriginalConcursoId = true;

            _originalConcursoId = _concursoId;
        }

        _concursoId = concursoId;
    }

    public long getOriginalConcursoId() {
        return _originalConcursoId;
    }

    @JSON
    @Override
    public String getDocumento() {
        if (_documento == null) {
            return StringPool.BLANK;
        } else {
            return _documento;
        }
    }

    @Override
    public void setDocumento(String documento) {
        _documento = documento;
    }

    @JSON
    @Override
    public String getPuntuacionObtenida() {
        if (_puntuacionObtenida == null) {
            return StringPool.BLANK;
        } else {
            return _puntuacionObtenida;
        }
    }

    @Override
    public void setPuntuacionObtenida(String puntuacionObtenida) {
        _puntuacionObtenida = puntuacionObtenida;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public Asignados toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (Asignados) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        AsignadosImpl asignadosImpl = new AsignadosImpl();

        asignadosImpl.setAsignadosId(getAsignadosId());
        asignadosImpl.setGroupId(getGroupId());
        asignadosImpl.setCompanyId(getCompanyId());
        asignadosImpl.setUserId(getUserId());
        asignadosImpl.setUserName(getUserName());
        asignadosImpl.setCreateDate(getCreateDate());
        asignadosImpl.setModifiedDate(getModifiedDate());
        asignadosImpl.setUsuarioId(getUsuarioId());
        asignadosImpl.setConcursoId(getConcursoId());
        asignadosImpl.setDocumento(getDocumento());
        asignadosImpl.setPuntuacionObtenida(getPuntuacionObtenida());

        asignadosImpl.resetOriginalValues();

        return asignadosImpl;
    }

    @Override
    public int compareTo(Asignados asignados) {
        String primaryKey = asignados.getPrimaryKey();

        return getPrimaryKey().compareTo(primaryKey);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof Asignados)) {
            return false;
        }

        Asignados asignados = (Asignados) obj;

        String primaryKey = asignados.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
        AsignadosModelImpl asignadosModelImpl = this;

        asignadosModelImpl._originalUsuarioId = asignadosModelImpl._usuarioId;

        asignadosModelImpl._setOriginalUsuarioId = false;

        asignadosModelImpl._originalConcursoId = asignadosModelImpl._concursoId;

        asignadosModelImpl._setOriginalConcursoId = false;

        asignadosModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<Asignados> toCacheModel() {
        AsignadosCacheModel asignadosCacheModel = new AsignadosCacheModel();

        asignadosCacheModel.asignadosId = getAsignadosId();

        String asignadosId = asignadosCacheModel.asignadosId;

        if ((asignadosId != null) && (asignadosId.length() == 0)) {
            asignadosCacheModel.asignadosId = null;
        }

        asignadosCacheModel.groupId = getGroupId();

        asignadosCacheModel.companyId = getCompanyId();

        asignadosCacheModel.userId = getUserId();

        asignadosCacheModel.userName = getUserName();

        String userName = asignadosCacheModel.userName;

        if ((userName != null) && (userName.length() == 0)) {
            asignadosCacheModel.userName = null;
        }

        Date createDate = getCreateDate();

        if (createDate != null) {
            asignadosCacheModel.createDate = createDate.getTime();
        } else {
            asignadosCacheModel.createDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            asignadosCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            asignadosCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        asignadosCacheModel.usuarioId = getUsuarioId();

        asignadosCacheModel.concursoId = getConcursoId();

        asignadosCacheModel.documento = getDocumento();

        String documento = asignadosCacheModel.documento;

        if ((documento != null) && (documento.length() == 0)) {
            asignadosCacheModel.documento = null;
        }

        asignadosCacheModel.puntuacionObtenida = getPuntuacionObtenida();

        String puntuacionObtenida = asignadosCacheModel.puntuacionObtenida;

        if ((puntuacionObtenida != null) && (puntuacionObtenida.length() == 0)) {
            asignadosCacheModel.puntuacionObtenida = null;
        }

        return asignadosCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(23);

        sb.append("{asignadosId=");
        sb.append(getAsignadosId());
        sb.append(", groupId=");
        sb.append(getGroupId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", userName=");
        sb.append(getUserName());
        sb.append(", createDate=");
        sb.append(getCreateDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", usuarioId=");
        sb.append(getUsuarioId());
        sb.append(", concursoId=");
        sb.append(getConcursoId());
        sb.append(", documento=");
        sb.append(getDocumento());
        sb.append(", puntuacionObtenida=");
        sb.append(getPuntuacionObtenida());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(37);

        sb.append("<model><model-name>");
        sb.append("com.telefonica.plataformaconcursos.model.Asignados");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>asignadosId</column-name><column-value><![CDATA[");
        sb.append(getAsignadosId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>groupId</column-name><column-value><![CDATA[");
        sb.append(getGroupId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userName</column-name><column-value><![CDATA[");
        sb.append(getUserName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createDate</column-name><column-value><![CDATA[");
        sb.append(getCreateDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>usuarioId</column-name><column-value><![CDATA[");
        sb.append(getUsuarioId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>concursoId</column-name><column-value><![CDATA[");
        sb.append(getConcursoId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>documento</column-name><column-value><![CDATA[");
        sb.append(getDocumento());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>puntuacionObtenida</column-name><column-value><![CDATA[");
        sb.append(getPuntuacionObtenida());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
